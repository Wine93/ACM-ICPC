
#--------------------------------------------------------------------------------------

# set prefix
set -g prefix C-a
unbind C-b

# reload config (prefix r)
bind r source ~/.tmux.conf \; display "Configuration reloaded!"

#--------------------------------------------------------------------------------------

# split windows
bind | split-window -h
bind - split-window -v

# select pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize pane
bind -r ^k resizep -U 10      
bind -r ^j resizep -D 10        
bind -r ^h resizep -L 10         
bind -r ^l resizep -R 10       

# swap pane
bind ^u swapp -U                  # swap with the previous pane (prefix Ctrl+u)
bind ^d swapp -D                  # swap with the next pane (prefix Ctrl+d)

# misc 
bind e lastp                      # select the last pane (prefix e)
bind ^e last                      # select the last window (prefix Ctrl+e)

# synchronize panes （窗口同步）
bind ^s setw synchronize-panes

# kill pane (prefix Ctrl+q)
bind x killp

#--------------------------------------------------------------------------------------

# use mouse to select window and pane
set -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
setw -g mode-keys vi
setw -g automatic-rename off

# copy mode 
bind Escape copy-mode             # enter copy mode (prefix Escape)
bind -t vi-copy v begin-selection # select (v)
bind -t vi-copy y copy-selection  # copy (y)

# move file content into tmux paste buffer
bind ^p  command-prompt "splitw 'exec tmux set-buffer \"$(cat %%)\"'"

# move tmux copy buffer into x clipboard
bind ^y run "tmux save-buffer - >(xclip -i /dev/stdin)"

# app
bind !  splitw htop                                     # htop (prefix !)
bind @  command-prompt "splitw 'exec perldoc -t -f %%'" # perl func (prefix @)
bind *  command-prompt "splitw 'exec perldoc -t -v %%'" # perl var  (prefix *)
bind %  command-prompt "splitw 'exec perldoc -t %%'"    # perl doc  (prefix %)
bind /  command-prompt "splitw 'exec ri %%'"            # ruby doc  (prefix /)
bind y  command-prompt "splitw 'exec ydcv --color always %% | less'"
bind ^x command-prompt "kill-session -t %%"

#--------------------------------------------------------------------------------------

# let tmux support 256 color
setw -g xterm-keys on
set-option -g default-terminal "screen-256color"

# set pane color
set -g pane-border-fg blue
set -g pane-border-bg cyan
set -g pane-active-border-fg green
set -g pane-active-border-bg yellow

set -g display-time 3000
set -g escape-time 0
set -g history-limit 65535
set -g base-index 1
setw -g utf8 on

# modes
setw -g clock-mode-colour colour223
setw -g mode-attr bold
setw -g mode-fg colour223
setw -g mode-bg colour235

# messages
set -g message-attr bold
set -g message-fg colour223
set -g message-bg default

# statusbar
set -g status-utf8 on
set -g status-interval 1
set -g status-keys vi
set -g status-justify left
set -g display-time 3000
set -g status-bg default
set -g status-fg white
set-window-option -g window-status-current-attr default
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default

set -g status-left-length 15
set -g status-right-length 55

set -g status-left "#[fg=white,bg=blue] > #I #W < #[default] |"         # 0:bash
set -g status-left "#[fg=red,bright] ¯..¯ #[default] |"         # session-name
set -g status-right "#[fg=red,bright][ #[fg=blue]#(echo "Wine93") #[fg=red]]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]#[fg=magenta,bright](load: #(cat /proc/loadavg | cut -d \" \" -f 1,2,3))#[default]"
